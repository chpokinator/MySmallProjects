<views:MvxWpfView
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"    
             x:Class="MvxStarter.Wpf.Views.CarCatalogView"
             xmlns:loc="clr-namespace:MvxStarter.Wpf.Properties"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MvxStarter.Wpf.Views"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900">

    <views:MvxWpfView.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"></Setter>
        </Style>
    </views:MvxWpfView.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="11*"></RowDefinition>
                <RowDefinition Height="4*"></RowDefinition>
            </Grid.RowDefinitions>

            <ListView Grid.Row="0"
                     ItemsSource="{Binding Cars, UpdateSourceTrigger=PropertyChanged}"
                     SelectedItem="{Binding CurrentCar}"
                     HorizontalContentAlignment="Center">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction 
                        Command ="{Binding RelativeSource={RelativeSource
                            Mode=FindAncestor,
                            AncestorType=views:MvxWpfView},
                            Path=DataContext.ShowCarCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>


                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel
                            Width="{Binding (FrameworkElement.ActualWidth),
                            RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}">

                        </WrapPanel>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Center" FontStyle="Italic" FontWeight="Bold" TextWrapping="WrapWithOverflow">
                            <Run Text="{Binding Title}"></Run>
                            <Run Text="{Binding Model}"></Run>
                            </TextBlock>
                            <Grid>
                                <Image Source="{Binding Photo}"
                                       Height="{Binding RelativeSource={RelativeSource AncestorType=views:MvxWpfView, Mode=FindAncestor}, Path=DataContext.SizeOfPic, UpdateSourceTrigger=PropertyChanged}"
                                       Width="{Binding RelativeSource={RelativeSource AncestorType=views:MvxWpfView, Mode=FindAncestor}, Path=DataContext.SizeOfPic, UpdateSourceTrigger=PropertyChanged}"></Image>
                            </Grid>

                        </StackPanel>


                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>


            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="7*"></RowDefinition>
                    <RowDefinition Height="17*"></RowDefinition>
                </Grid.RowDefinitions>


                <StackPanel Grid.Row="1" HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="5">

                    <TextBlock FontWeight="Bold"
                               Margin="5"
                               Text="{x:Static loc:Resources.SortBy}"></TextBlock>
                    <Button FontWeight="Bold"
                            Margin="0,0,0,5"
                            mvx:Bi.nd="Command SortByModelCommand"
                            Content="{x:Static loc:Resources.ModelSort}">
                        
                    </Button>

                    <Button FontWeight="Bold"
                            mvx:Bi.nd="Command SortByTitleCommand"
                            Content="{x:Static loc:Resources.TitleSort}"></Button>
                    
                    
                </StackPanel>
                            

                <StackPanel Grid.Row="1" HorizontalAlignment="Left"
                            Margin="5"
                            VerticalAlignment="Center">
                    <Button Width="70"
                            Height="30"
                            FontWeight="Bold"
                            Name="Dark"
                            Click="Dark_Click"
                            Content="{x:Static loc:Resources.Dark}"></Button>

                    <Button Width="70"
                            Height="30"
                            Margin="5"
                            Name="Light"
                            FontWeight="Bold"
                            Click="Light_Click"
                            Content="{x:Static loc:Resources.Light}"></Button>
                </StackPanel>

                <Grid Grid.Row="1" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="86*"></RowDefinition>
                        <RowDefinition Height="65*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0" HorizontalAlignment="Center">
                        <Button Height="45" Width="85" Margin="5,0,5,0" FontSize="14" FontWeight="Bold" mvx:Bi.nd="Command EditCommand" Content="{x:Static loc:Resources.Edit}"></Button>
                        <Button Height="45" Width="85" Margin="5,0,5,0" FontSize="14" FontWeight="Bold" mvx:Bi.nd="Command AddNewCommand" Content="{x:Static loc:Resources.Add}"></Button>
                        <Button Height="45" Width="85" Margin="5,0,5,0" FontSize="14" FontWeight="Bold" mvx:Bi.nd="Command RemoveCommand" Content="{x:Static loc:Resources.Remove}"></Button>
                        <Button Height="45" Width="85" Margin="5,0,5,0" FontSize="14" FontWeight="Bold" mvx:Bi.nd="Command LoadCommand" Content="{x:Static loc:Resources.Load}"></Button>

                    </WrapPanel>

                    <DockPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Button Margin="0,0,30,0"
                                FontWeight="Bold"
                                Width="30"
                                Name="enLan"
                                Click="enLan_Click"
                                mvx:Bi.nd="Command EngLangCommand">en</Button>


                        <Button FontWeight="Bold" Height="25" MinHeight="25" mvx:Bi.nd="Command SearchCommand" Content="{x:Static loc:Resources.Search}"></Button>
                        
                        
                        <Button Margin="30,0,0,0"
                                FontWeight="Bold"
                                Width="30"
                                Name="ruLan"
                                Click="ruLan_Click"
                                mvx:Bi.nd="Command RusLangCommand">ru</Button>
                    </DockPanel>
                </Grid>



                <Slider Grid.Row="0"
                        Minimum="100"
                        Maximum="500"
                        TickFrequency="10"
                        TickPlacement="BottomRight"
                        Value="{Binding SizeOfPic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></Slider>
            </Grid>
        </Grid>


    </Grid>
</views:MvxWpfView>
